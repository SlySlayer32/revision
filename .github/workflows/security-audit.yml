name: Security Audit

on:
  schedule:
    # Run security audit every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'pubspec.yaml'
      - 'pubspec.lock'

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Install Dependencies
        run: flutter pub get

      - name: Run Flutter Security Audit
        id: audit
        run: |
          # Check for known vulnerabilities
          flutter pub deps --style=list > deps.txt
          
          # Create audit report
          echo "## Security Audit Report - $(date)" > security-report.md
          echo "" >> security-report.md
          
          # Check for outdated packages
          echo "### Outdated Packages" >> security-report.md
          flutter pub outdated --json > outdated.json || true
          
          if [ -s outdated.json ]; then
            echo "Found outdated packages. See details below:" >> security-report.md
            cat outdated.json >> security-report.md
          else
            echo "✅ All packages are up to date" >> security-report.md
          fi
          
          echo "" >> security-report.md
          echo "### Dependency Tree" >> security-report.md
          echo '```' >> security-report.md
          cat deps.txt >> security-report.md
          echo '```' >> security-report.md

      - name: Check for security advisories
        run: |
          # This would typically use a security scanning tool
          # For now, we'll check pub.dev security advisories manually
          echo "### Security Advisories Check" >> security-report.md
          echo "Manual security review recommended for:" >> security-report.md
          echo "- Firebase packages" >> security-report.md
          echo "- Authentication packages" >> security-report.md
          echo "- Image processing packages" >> security-report.md
          echo "- Network packages" >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-report
          path: security-report.md
          retention-days: 30

      - name: Create issue for security concerns
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create \
            --title "🔒 Security Audit Failed - $(date +%Y-%m-%d)" \
            --body "Security audit workflow failed. Please review the security report and address any vulnerabilities.
            
            **Workflow:** ${{ github.workflow }}
            **Run ID:** ${{ github.run_id }}
            **Date:** $(date)
            
            Please check the workflow logs and security report for details." \
            --label "security,bug,high-priority"

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-3-Clause, BSD-2-Clause, ISC
          deny-licenses: GPL-3.0, AGPL-3.0

  android-security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Android Security Lint
        run: |
          cd android
          ./gradlew lintDebug
          
      - name: Upload Android lint results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-lint-results
          path: android/app/build/reports/lint-results-debug.html
          retention-days: 30

  ios-security:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Install Dependencies
        run: flutter pub get

      - name: iOS Security Analysis
        run: |
          cd ios
          
          # Check for common iOS security issues
          echo "### iOS Security Check" > ../ios-security-report.md
          echo "" >> ../ios-security-report.md
          
          # Check Info.plist for security configurations
          if grep -q "NSAllowsArbitraryLoads" Runner/Info.plist; then
            echo "⚠️ Warning: NSAllowsArbitraryLoads found in Info.plist" >> ../ios-security-report.md
          else
            echo "✅ No NSAllowsArbitraryLoads found" >> ../ios-security-report.md
          fi
          
          # Check for hardcoded URLs or keys
          if grep -r "http://" Runner/; then
            echo "⚠️ Warning: HTTP URLs found (should use HTTPS)" >> ../ios-security-report.md
          else
            echo "✅ No HTTP URLs found" >> ../ios-security-report.md
          fi

      - name: Upload iOS security report
        uses: actions/upload-artifact@v4
        with:
          name: ios-security-report
          path: ios-security-report.md
          retention-days: 30
