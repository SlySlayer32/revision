plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

/**
 * Android build configuration for the Revision app.
 * 
 * Configures build settings, SDK versions, product flavors, and signing configurations
 * for different build variants of the application.
 * 
 * Key configurations include:
 * - Namespace and application ID
 * - Compilation and target SDK versions
 * - Build features and compile options
 * - Minimum SDK version and multi-dex support
 * - Signing configurations for release builds
 * - Product flavors (production, staging, development)
 * - Build type settings (release and debug)
 * 
 * @property namespace The unique namespace for the application
 * @property compileSdkVersion Target Android SDK version for compilation
 * @property ndkVersion Native Development Kit version
 * @property defaultConfig Application-wide build configurations
 * @property productFlavors Different build variants with distinct configurations
 * @property buildTypes Defines release and debug build behaviors
 */
android {
    namespace "com.sly.revision"
    compileSdkVersion 35  // Updated for plugin compatibility
    ndkVersion "26.3.11579264"  // Updated to required NDK version
    
    buildFeatures {
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        applicationId "com.sly.revision"
        minSdkVersion 24  // Increased for Firebase compatibility
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    signingConfigs {
        if (System.getenv("ANDROID_KEYSTORE_PATH")) {
            release {
                storeFile file(System.getenv("ANDROID_KEYSTORE_PATH"))
                keyAlias System.getenv("ANDROID_KEYSTORE_ALIAS")
                keyPassword System.getenv("ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
                storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
            }
        } else {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    flavorDimensions "default"
    productFlavors { 
        production {
            dimension "default"
            applicationIdSuffix ""
            manifestPlaceholders = [appName: "Revision"]
        }
        staging {
            dimension "default"
            applicationIdSuffix ".stg"
            manifestPlaceholders = [appName: "[STG] Revision"]
        }
        development {
            dimension "default"
            applicationIdSuffix ".dev"
            manifestPlaceholders = [appName: "[DEV] Revision"]
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
}

/**
 * Android build configuration for the Revision app.
 * 
 * Configures build settings, SDK versions, product flavors, and signing configurations
 * for different build variants of the application.
 * 
 * Key configurations include:
 * - Namespace and application ID
 * - Compilation and target SDK versions
 * - Build features and compile options
 * - Minimum SDK version and multi-dex support
 * - Signing configurations for release builds
 * - Product flavors (production, staging, development)
 * - Build type settings (release and debug)
 * 
 * @property namespace The unique namespace for the application
 * @property compileSdkVersion Target Android SDK version for compilation
 * @property ndkVersion Native Development Kit version
 * @property defaultConfig Application-wide build configurations
 * @property productFlavors Different build variants with distinct configurations
 * @property buildTypes Defines release and debug build behaviors
 */
flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    
    // Use a stable Firebase BoM version compatible with SDK 35
    implementation platform('com.google.firebase:firebase-bom:32.8.0')

    // Add Analytics
    implementation 'com.google.firebase:firebase-analytics'

    // Add Authentication
    implementation 'com.google.firebase:firebase-auth'
    
    // You can now uncomment this line
    implementation 'com.google.firebase:firebase-firestore'
}
